# Декодирование Хаффмана
#
# Восстановите строку по её коду и беспрефиксному коду символов.
#
# В первой строке входного файла заданы два целых числа k и l через пробел — количество различных букв, встречающихся
# в строке, и размер получившейся закодированной строки, соответственно. В следующих k строках записаны коды букв в
# формате "letter: code". Ни один код не является префиксом другого. Буквы могут быть перечислены в любом порядке. В
# качестве букв могут встречаться лишь строчные буквы латинского алфавита; каждая из этих букв встречается в строке
# хотя бы один раз. Наконец, в последней строке записана закодированная строка. Исходная строка и коды всех букв не
# пусты. Заданный код таков, что закодированная строка имеет минимальный возможный размер.
#
# В первой строке выходного файла выведите строку s. Она должна состоять из строчных букв латинского алфавита.
# Гарантируется, что длина правильного ответа не превосходит 10^4 символов.

k, length = [int(c) for c in input().split()]
codes = {}

for _ in range(k):
    line = input()
    codes[line[3:]] = line[0]

encoded_string = input()

buffer = ''
decoded_string = ''

for char in encoded_string:
    buffer += char
    if buffer in codes:
        decoded_string += codes[buffer]
        buffer = ''

print(decoded_string)
